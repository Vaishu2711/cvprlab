import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load image
img = cv2.imread('image.jpg')
if img is None:
    raise ValueError("Image not found or unable to load!")

# Convert to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Edge detection
edges = cv2.Canny(gray, 50, 150, apertureSize=3)

# Probabilistic Hough Line Transform
lines = cv2.HoughLinesP(edges, rho=1, theta=np.pi / 180, threshold=80,
                        minLineLength=50, maxLineGap=10)

# Draw lines on the original image
if lines is not None:
    for line in lines:
        x1, y1, x2, y2 = line[0]
        cv2.line(img, (x1, y1), (x2, y2), (0, 255, 0), 2)
else:
    print("No lines detected.")

# Convert image to RGB for matplotlib
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# Resize figure to fit image
height, width = img.shape[:2]
dpi = 100
plt.figure(figsize=(width / dpi, height / dpi))
plt.imshow(img_rgb)
plt.axis('off')
plt.tight_layout()
plt.show()
